var d=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var h=Object.prototype.hasOwnProperty;var g=(t,e,a)=>e in t?d(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a;var u=(t,e)=>{for(var a in e)d(t,a,{get:e[a],enumerable:!0})},f=(t,e,a,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of p(e))!h.call(t,i)&&i!==a&&d(t,i,{get:()=>e[i],enumerable:!(s=m(e,i))||s.enumerable});return t};var b=t=>f(d({},"__esModule",{value:!0}),t);var o=(t,e,a)=>(g(t,typeof e!="symbol"?e+"":e,a),a);var A={};u(A,{InputValidator:()=>r});module.exports=b(A);var c=require("@hotwired/stimulus");var y={presence(t,e){t.trim().length===0&&e.push({type:"presence",message:"Can't be blank"})},length(t,e,a){t.length<e.min&&a.push({type:"length-min",message:`Too short. Minimum ${e.min} characters`}),t.length>e.max&&a.push({type:"length-max",message:`Too long. Maximum ${e.max} characters`})},numericality(t,e){/^[+-]?(\d+(\.\d*)?|\.\d+)([eE][+-]?\d+)?$/.test(t)||e.push({type:"numericality",message:"Must be a number"})},email(t,e){/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(t)||e.push({type:"email",message:"Invalid email format"})},strongPassword(t,e){let a=/[A-Z]/,s=/[0-9]/,i=/[!@#$%^&*]/;t.length<10&&e.push({type:"strong-password-length",message:"Must be at least 10 characters long"}),a.test(t)||e.push({type:"strong-password-capital-letter",message:"Must contain at least one capital letter (A-Z)"}),s.test(t)||e.push({type:"strong-password-number",message:"Must contain at least one number"}),i.test(t)||e.push({type:"strong-password-special-character",message:"Must contain at least one special character (!@#$%^&*)"})}},l=y;var r=class extends c.Controller{connect(){this.fieldTargets.forEach(t=>{t.setAttribute("data-action","input->input-validator#validateInput"),t.addEventListener("blur",e=>{this.validateInput(e)})})}handleJSONValidations(t,e,a){e.forEach(s=>{let[i]=Object.keys(s);switch(i){case"presence":s.presence&&l.presence(t,a);break;case"length":s.length.min&&s.length.max?l.length(t,s.length,a):console.log("Couldn't validate length (missing keys min or max)");break;case"numericality":s.numericality&&l.numericality(t,a);break;case"email":s.email&&l.email(t,a);break;case"strong_password":s.strong_password&&l.strongPassword(t,a);break;default:break}})}handleValidations(t,e,a){if(t.hasAttribute("data-validates-presence")&&t.getAttribute("data-validates-presence")!="false"&&l.presence(e,a),t.hasAttribute("data-validates-length")&&t.getAttribute("data-validates-length").length>2){let[s,i]=t.getAttribute("data-validates-length").split(",").map(Number);l.length(e,{min:s,max:i},a)}t.hasAttribute("data-validates-numericality")&&t.getAttribute("data-validates-numericality")!="false"&&l.numericality(e,a),t.hasAttribute("data-validates-email")&&t.getAttribute("data-validates-email")!="false"&&l.email(e,a),t.hasAttribute("data-validates-strong-password")&&t.getAttribute("data-validates-strong-password")!="false"&&l.strongPassword(e,a)}errorElement(t,e){let a="font-size: 14px; color: red",s;return t.hasAttribute("data-errors-styles-css")&&(a=t.getAttribute("data-errors-styles-css")),t.hasAttribute("data-errors-styles-class")&&(a=null,s=t.getAttribute("data-errors-styles-class")),`<div error="${e.type}" ${a?"style='"+a+"'":""} ${s?"class='"+s+"'":""} >${e.message}</div>`}validateInput({target:t,target:{value:e}}){let a=[],s=t.getAttribute("data-field"),[i]=this.errorsTargets.filter(n=>n.getAttribute("data-field")==s);if(t.hasAttribute("data-validations"))try{let n=JSON.parse(t.getAttribute("data-validations"));this.handleJSONValidations(e,n,a)}catch(n){console.log(n),console.log(`Error parsing JSON string on the data-validations attribute on data-field="${s}". Is the json string formatted properly?`);return}else this.handleValidations(t,e,a);i.innerHTML="",a.length?a.forEach(n=>{i.innerHTML+=this.errorElement(i,n),i.style.visibility="visible"}):i.style.visibility="invisible"}};o(r,"targets",["field","errors"]);
