{
  "version": 3,
  "sources": ["../src/index.js", "../src/input_validator.js", "../src/validations/validate.js", "../src/helpers/node_helper.js"],
  "sourcesContent": ["export { default as InputValidator } from './input_validator'\n", "import { Controller } from \"@hotwired/stimulus\";\nimport Validate from \"./validations/validate\";\nimport RailsValidations from \"./validations/rails_validations\";\nimport { getField } from \"./helpers/node_helper\";\n\n// Connects to data-controller=\"input-validator\"\nexport default class extends Controller {\n  static targets = [\"textField\", \"errors\"];\n\n  connect() {\n    this.textFieldTargets.forEach((field) => {\n      field.setAttribute(\"data-action\", \"input->input-validator#validateInput\");\n    });\n  }\n\n  validateMultiple(target, errors) {}\n\n  handleValidations(target, value, errors) {\n    if (target.hasAttribute(\"data-validations\")) {\n      this.validateMultiple(value, errors);\n    }\n\n    if (\n      target.hasAttribute(\"data-validate-presence\") &&\n      target.getAttribute(\"data-validate-presence\") != \"false\"\n    ) {\n      Validate.presence(value, errors);\n    }\n\n    if (\n      target.hasAttribute(\"data-validate-length\") &&\n      target.getAttribute(\"data-validate-length\").length > 2\n    ) {\n      const [min, max] = target\n        .getAttribute(\"data-validate-length\")\n        .split(\",\")\n        .map(Number);\n\n      Validate.length(value, errors, { min, max });\n    }\n\n    if (\n      target.hasAttribute(\"data-validate-numericality\") &&\n      target.getAttribute(\"data-validate-numericality\") != \"false\"\n    ) {\n      Validate.numericality(value, errors);\n    }\n  }\n\n  validateInput({ params: { validations }, target, target: { value } }) {\n    let field = getField(target);\n    let [errorsContainer] = this.errorsTargets.filter(\n      (item) => item.getAttribute(\"data-field\") == field\n    );\n\n    errorsContainer.innerHTML = ``;\n\n    let errors = [];\n\n    this.handleValidations(target, value, errors);\n\n    if (errors.length) {\n      errors.forEach((error) => {\n        errorsContainer.innerHTML += `<div error=\"${error.type}\" class=\"text-sm text-red-500\">${error.message}</div>`;\n        errorsContainer.style.visibility = \"visible\";\n      });\n    } else {\n      errorsContainer.style.visibility = \"invisible\";\n    }\n  }\n}\n", "const Validate = {\n  presence(value, errors) {\n    if (value.trim().length === 0) {\n      errors.push({ type: \"presence\", message: \"Can't be blank\" });\n    }\n  },\n\n  length(value, errors, minMax) {\n    if (value.length < minMax.min) {\n      errors.push({\n        type: \"length-min\",\n        message: `Too short. Minimum ${minMax.min} characters`,\n      });\n    }\n    if (value.length > minMax.max) {\n      errors.push({\n        type: \"length-max\",\n        message: `Too long. Maximum ${minMax.max} characters`,\n      });\n    }\n  },\n\n  numericality(value, errors) {\n    if(!value.length) return\n\n    const numberRegex = /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?$/;\n\n    if (!numberRegex.test(value)) {\n      errors.push({ type: \"numericality\", message: \"Must be a number\" });\n    }\n  },\n};\n\nexport default Validate;\n", "export const getField = (target) => {\n  return target.getAttribute(\"data-field\")\n}\n\n"],
  "mappings": "wiBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,oBAAAE,IAAA,eAAAC,EAAAH,GCAA,IAAAI,EAA2B,8BCA3B,IAAMC,EAAW,CACf,SAASC,EAAOC,EAAQ,CAClBD,EAAM,KAAK,EAAE,SAAW,GAC1BC,EAAO,KAAK,CAAE,KAAM,WAAY,QAAS,gBAAiB,CAAC,CAE/D,EAEA,OAAOD,EAAOC,EAAQC,EAAQ,CACxBF,EAAM,OAASE,EAAO,KACxBD,EAAO,KAAK,CACV,KAAM,aACN,QAAS,sBAAsBC,EAAO,GAAG,aAC3C,CAAC,EAECF,EAAM,OAASE,EAAO,KACxBD,EAAO,KAAK,CACV,KAAM,aACN,QAAS,qBAAqBC,EAAO,GAAG,aAC1C,CAAC,CAEL,EAEA,aAAaF,EAAOC,EAAQ,CAC1B,GAAG,CAACD,EAAM,OAAQ,OAEE,4CAEH,KAAKA,CAAK,GACzBC,EAAO,KAAK,CAAE,KAAM,eAAgB,QAAS,kBAAmB,CAAC,CAErE,CACF,EAEOE,EAAQJ,ECjCR,IAAMK,EAAYC,GAChBA,EAAO,aAAa,YAAY,EFKzC,IAAOC,EAAP,cAA6B,YAAW,CAGtC,SAAU,CACR,KAAK,iBAAiB,QAASC,GAAU,CACvCA,EAAM,aAAa,cAAe,sCAAsC,CAC1E,CAAC,CACH,CAEA,iBAAiBC,EAAQC,EAAQ,CAAC,CAElC,kBAAkBD,EAAQE,EAAOD,EAAQ,CAYvC,GAXID,EAAO,aAAa,kBAAkB,GACxC,KAAK,iBAAiBE,EAAOD,CAAM,EAInCD,EAAO,aAAa,wBAAwB,GAC5CA,EAAO,aAAa,wBAAwB,GAAK,SAEjDG,EAAS,SAASD,EAAOD,CAAM,EAI/BD,EAAO,aAAa,sBAAsB,GAC1CA,EAAO,aAAa,sBAAsB,EAAE,OAAS,EACrD,CACA,GAAM,CAACI,EAAKC,CAAG,EAAIL,EAChB,aAAa,sBAAsB,EACnC,MAAM,GAAG,EACT,IAAI,MAAM,EAEbG,EAAS,OAAOD,EAAOD,EAAQ,CAAE,IAAAG,EAAK,IAAAC,CAAI,CAAC,CAC7C,CAGEL,EAAO,aAAa,4BAA4B,GAChDA,EAAO,aAAa,4BAA4B,GAAK,SAErDG,EAAS,aAAaD,EAAOD,CAAM,CAEvC,CAEA,cAAc,CAAE,OAAQ,CAAE,YAAAK,CAAY,EAAG,OAAAN,EAAQ,OAAQ,CAAE,MAAAE,CAAM,CAAE,EAAG,CACpE,IAAIH,EAAQQ,EAASP,CAAM,EACvB,CAACQ,CAAe,EAAI,KAAK,cAAc,OACxCC,GAASA,EAAK,aAAa,YAAY,GAAKV,CAC/C,EAEAS,EAAgB,UAAY,GAE5B,IAAIP,EAAS,CAAC,EAEd,KAAK,kBAAkBD,EAAQE,EAAOD,CAAM,EAExCA,EAAO,OACTA,EAAO,QAASS,GAAU,CACxBF,EAAgB,WAAa,eAAeE,EAAM,IAAI,kCAAkCA,EAAM,OAAO,SACrGF,EAAgB,MAAM,WAAa,SACrC,CAAC,EAEDA,EAAgB,MAAM,WAAa,WAEvC,CACF,EA/DEG,EADKb,EACE,UAAU,CAAC,YAAa,QAAQ",
  "names": ["src_exports", "__export", "input_validator_default", "__toCommonJS", "import_stimulus", "Validate", "value", "errors", "minMax", "validate_default", "getField", "target", "input_validator_default", "field", "target", "errors", "value", "validate_default", "min", "max", "validations", "getField", "errorsContainer", "item", "error", "__publicField"]
}
