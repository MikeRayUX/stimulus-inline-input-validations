{
  "version": 3,
  "sources": ["../src/index.js", "../src/input_validator.js", "../src/validations/presence.js", "../src/helpers/node_helper.js"],
  "sourcesContent": ["export { default as InputValidator } from './input_validator'\n", "import { Controller } from \"@hotwired/stimulus\";\nimport { validatePresence } from \"./validations/presence\";\nimport { getField } from \"./helpers/node_helper\";\n\n// Connects to data-controller=\"input-validator\"\nexport default class extends Controller {\n  static targets = [\"textField\", \"errors\"];\n\n  connect() {\n    this.textFieldTargets.forEach(field => {\n      field.setAttribute(\"data-action\", \"input->input-validator#validateInput\")\n    })\n  }\n\n  getErrors(value, validations) {\n    let errors = [];\n    validations.forEach((validation) => {\n      const validationName = Object.keys(validation)[0];\n      switch (validationName) {\n        case \"presence\":\n          if (value.trim().length === 0) errors.push(\"Can't be blank\");\n          break;\n        case \"length\":\n          if (validation.length.min && value.length < validation.length.min) {\n            errors.push(\n              `Too short. Minimum ${validation.length.min} characters`\n            );\n          }\n          if (validation.length.max && value.length > validation.length.max) {\n            errors.push(\n              `Too long. Maximum ${validation.length.max} characters`\n            );\n          }\n          break;\n        default:\n          break;\n      }\n    });\n\n    return errors;\n  }\n\n  handleValidationsList(target, field, value, errors) {\n    if (target.hasAttribute(\"data-validate-presence\")) {\n      validatePresence(target, field, value, errors);\n    }\n  }\n\n  validateInput({ params: { validations }, target, target: { value } }) {\n    let field = getField(target);\n    let [errors] = this.errorsTargets.filter(\n      (item) => item.getAttribute(\"data-field\") == field\n    );\n    this.handleValidationsList(target, field, value, errors);\n  }\n}\n", "export async function validatePresence(target, field, value, errorsContainer) {\n  if (!target) return;\n  if (target.getAttribute(\"data-validate-presence\") == \"false\") return;\n\n\n  console.log(\"should do soething\")\n  if (value.trim().length === 0) {\n    errorsContainer.innerHTML += `<div class=\"text-sm text-red-500\">Can't be blank</div>`\n    errorsContainer.classList.remove(\"hidden\");\n  };\n}\n", "export const getField = (target) => {\n  return target.getAttribute(\"data-field\")\n}\n"],
  "mappings": "wiBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,oBAAAE,IAAA,eAAAC,EAAAH,GCAA,IAAAI,EAA2B,8BCA3B,eAAsBC,EAAiBC,EAAQC,EAAOC,EAAOC,EAAiB,CACvEH,GACDA,EAAO,aAAa,wBAAwB,GAAK,UAGrD,QAAQ,IAAI,oBAAoB,EAC5BE,EAAM,KAAK,EAAE,SAAW,IAC1BC,EAAgB,WAAa,yDAC7BA,EAAgB,UAAU,OAAO,QAAQ,GAE7C,CCVO,IAAMC,EAAYC,GAChBA,EAAO,aAAa,YAAY,EFIzC,IAAOC,EAAP,cAA6B,YAAW,CAGtC,SAAU,CACR,KAAK,iBAAiB,QAAQC,GAAS,CACrCA,EAAM,aAAa,cAAe,sCAAsC,CAC1E,CAAC,CACH,CAEA,UAAUC,EAAOC,EAAa,CAC5B,IAAIC,EAAS,CAAC,EACd,OAAAD,EAAY,QAASE,GAAe,CAElC,OADuB,OAAO,KAAKA,CAAU,EAAE,CAAC,EACxB,CACtB,IAAK,WACCH,EAAM,KAAK,EAAE,SAAW,GAAGE,EAAO,KAAK,gBAAgB,EAC3D,MACF,IAAK,SACCC,EAAW,OAAO,KAAOH,EAAM,OAASG,EAAW,OAAO,KAC5DD,EAAO,KACL,sBAAsBC,EAAW,OAAO,GAAG,aAC7C,EAEEA,EAAW,OAAO,KAAOH,EAAM,OAASG,EAAW,OAAO,KAC5DD,EAAO,KACL,qBAAqBC,EAAW,OAAO,GAAG,aAC5C,EAEF,MACF,QACE,KACJ,CACF,CAAC,EAEMD,CACT,CAEA,sBAAsBE,EAAQL,EAAOC,EAAOE,EAAQ,CAC9CE,EAAO,aAAa,wBAAwB,GAC9CC,EAAiBD,EAAQL,EAAOC,EAAOE,CAAM,CAEjD,CAEA,cAAc,CAAE,OAAQ,CAAE,YAAAD,CAAY,EAAG,OAAAG,EAAQ,OAAQ,CAAE,MAAAJ,CAAM,CAAE,EAAG,CACpE,IAAID,EAAQO,EAASF,CAAM,EACvB,CAACF,CAAM,EAAI,KAAK,cAAc,OAC/BK,GAASA,EAAK,aAAa,YAAY,GAAKR,CAC/C,EACA,KAAK,sBAAsBK,EAAQL,EAAOC,EAAOE,CAAM,CACzD,CACF,EAjDEM,EADKV,EACE,UAAU,CAAC,YAAa,QAAQ",
  "names": ["src_exports", "__export", "input_validator_default", "__toCommonJS", "import_stimulus", "validatePresence", "target", "field", "value", "errorsContainer", "getField", "target", "input_validator_default", "field", "value", "validations", "errors", "validation", "target", "validatePresence", "getField", "item", "__publicField"]
}
