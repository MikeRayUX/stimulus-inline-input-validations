var m=Object.defineProperty;var u=(t,e,a)=>e in t?m(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a;var d=(t,e,a)=>(u(t,typeof e!="symbol"?e+"":e,a),a);import{Controller as c}from"@hotwired/stimulus";var o={presence(t,e){t.trim().length===0&&e.push({type:"presence",message:"Can't be blank"})},length(t,e,a){t.length<e.min&&a.push({type:"length-min",message:`Too short. Minimum ${e.min} characters`}),t.length>e.max&&a.push({type:"length-max",message:`Too long. Maximum ${e.max} characters`})},numericality(t,e){/^[+-]?(\d+(\.\d*)?|\.\d+)([eE][+-]?\d+)?$/.test(t)||e.push({type:"numericality",message:"Must be a number"})},email(t,e){/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(t)||e.push({type:"email",message:"Invalid email format"})}},l=o;var r=class extends c{connect(){this.textFieldTargets.forEach(t=>{t.setAttribute("data-action","input->input-validator#validateInput"),t.addEventListener("blur",e=>{this.validateInput(e)})})}validateMultiple(t,e){}handleValidations(t,e,a){if(t.hasAttribute("data-validate-presence")&&t.getAttribute("data-validate-presence")!="false"&&l.presence(e,a),t.hasAttribute("data-validate-length")&&t.getAttribute("data-validate-length").length>2){let[i,s]=t.getAttribute("data-validate-length").split(",").map(Number);l.length(e,{min:i,max:s},a)}t.hasAttribute("data-validate-numericality")&&t.getAttribute("data-validate-numericality")!="false"&&l.numericality(e,a),t.hasAttribute("data-validate-email")&&t.getAttribute("data-validate-email")!="false"&&l.email(e,a)}errorElement(t,e){let a="font-size: 14px; color: red",i;return t.hasAttribute("data-errors-styles-css")&&(a=t.getAttribute("data-errors-styles-css")),t.hasAttribute("data-errors-styles-class")&&(a=null,i=t.getAttribute("data-errors-styles-class")),`<div error="${e.type}" ${a?"style='"+a+"'":""} ${i?"class='"+i+"'":""} >${e.message}</div>`}validateInput({target:t,target:{value:e}}){let a=t.getAttribute("data-field"),[i]=this.errorsTargets.filter(n=>n.getAttribute("data-field")==a);i.innerHTML="";let s=[];this.handleValidations(t,e,s),s.length?s.forEach(n=>{i.innerHTML+=this.errorElement(i,n),i.style.visibility="visible"}):i.style.visibility="invisible"}};d(r,"targets",["textField","errors"]);export{r as InputValidator};
