var u=Object.defineProperty;var p=(t,e,i)=>e in t?u(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i;var o=(t,e,i)=>(p(t,typeof e!="symbol"?e+"":e,i),i);import{Controller as c}from"@hotwired/stimulus";var h={presence(t,e){t.trim().length===0&&e.push({type:"presence",message:"Can't be blank"})},length(t,e,i){t.length<i.min&&e.push({type:"length-min",message:`Too short. Minimum ${i.min} characters`}),t.length>i.max&&e.push({type:"length-max",message:`Too long. Maximum ${i.max} characters`})},numericality(t,e){if(!t.length)return;/^[+-]?(\d+(\.\d*)?|\.\d+)([eE][+-]?\d+)?$/.test(t)||e.push({type:"numericality",message:"Must be a number"})}},s=h;var m=t=>t.getAttribute("data-field");var n=class extends c{connect(){this.textFieldTargets.forEach(t=>{t.setAttribute("data-action","input->input-validator#validateInput")})}validateMultiple(t,e){}handleValidations(t,e,i){if(t.hasAttribute("data-validations")&&this.validateMultiple(e,i),t.hasAttribute("data-validate-presence")&&t.getAttribute("data-validate-presence")!="false"&&s.presence(e,i),t.hasAttribute("data-validate-length")&&t.getAttribute("data-validate-length").length>2){let[r,a]=t.getAttribute("data-validate-length").split(",").map(Number);s.length(e,i,{min:r,max:a})}t.hasAttribute("data-validate-numericality")&&t.getAttribute("data-validate-numericality")!="false"&&s.numericality(e,i)}validateInput({params:{validations:t},target:e,target:{value:i}}){let r=m(e),[a]=this.errorsTargets.filter(l=>l.getAttribute("data-field")==r);a.innerHTML="";let d=[];this.handleValidations(e,i,d),d.length?d.forEach(l=>{a.innerHTML+=`<div error="${l.type}" class="text-sm text-red-500">${l.message}</div>`,a.style.visibility="visible"}):a.style.visibility="invisible"}};o(n,"targets",["textField","errors"]);export{n as InputValidator};
