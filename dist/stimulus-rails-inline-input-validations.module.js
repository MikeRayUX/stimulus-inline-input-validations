var u=Object.defineProperty;var f=(t,e,i)=>e in t?u(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i;var d=(t,e,i)=>(f(t,typeof e!="symbol"?e+"":e,i),i);import{Controller as h}from"@hotwired/stimulus";var c={presence(t,e){t&&t.getAttribute("data-validate-presence")!="false"&&t.value.trim().length===0&&e.push("Can't be blank")},length(t,e){if(!t||!t.hasAttribute("data-validate-length"))return;let[i,a]=t.getAttribute("data-validate-length").split(",");t.value.length<i&&e.push(`Too short. Minimum ${i} characters`),t.value.length>a&&e.push(`Too long. Maximum ${a} characters`)},numericality(t,e){/^[+-]?(\d+(\.\d*)?|\.\d+)([eE][+-]?\d+)?$/.test(t.value)||e.push("Must be a number")}},r=c;var o=t=>t.getAttribute("data-field");var n=class extends h{connect(){this.textFieldTargets.forEach(t=>{t.setAttribute("data-action","input->input-validator#validateInput")})}validateInput({params:{validations:t},target:e}){let i=o(e),[a]=this.errorsTargets.filter(s=>s.getAttribute("data-field")==i);a.innerHTML="";let l=[];e.hasAttribute("data-validate-presence")&&r.presence(e,l),e.hasAttribute("data-validate-length")&&r.length(e,l),e.hasAttribute("data-validate-numericality")&&r.numericality(e,l),console.log("errors",l),l.length?l.forEach(s=>{a.innerHTML+=`<div class="text-sm text-red-500">${s}</div>`,a.style.visibility="visible"}):a.style.visibility="invisible"}};d(n,"targets",["textField","errors"]);export{n as InputValidator};
