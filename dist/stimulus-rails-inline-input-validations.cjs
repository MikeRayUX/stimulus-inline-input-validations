var n=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var u=Object.prototype.hasOwnProperty;var g=(t,e,r)=>e in t?n(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r;var p=(t,e)=>{for(var r in e)n(t,r,{get:e[r],enumerable:!0})},b=(t,e,r,a)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of f(e))!u.call(t,i)&&i!==r&&n(t,i,{get:()=>e[i],enumerable:!(a=m(e,i))||a.enumerable});return t};var x=t=>b(n({},"__esModule",{value:!0}),t);var l=(t,e,r)=>(g(t,typeof e!="symbol"?e+"":e,r),r);var k={};p(k,{InputValidator:()=>s});module.exports=x(k);var h=require("@hotwired/stimulus");async function o(t,e,r,a){t&&t.getAttribute("data-validate-presence")!="false"&&(console.log("should do soething"),r.trim().length===0&&(a.innerHTML+=`<div class="text-sm text-red-500">Can't be blank</div>`,a.classList.remove("hidden")))}var d=t=>t.getAttribute("data-field");var s=class extends h.Controller{connect(){this.textFieldTargets.forEach(t=>{t.setAttribute("data-action","input->input-validator#validateInput")})}getErrors(t,e){let r=[];return e.forEach(a=>{switch(Object.keys(a)[0]){case"presence":t.trim().length===0&&r.push("Can't be blank");break;case"length":a.length.min&&t.length<a.length.min&&r.push(`Too short. Minimum ${a.length.min} characters`),a.length.max&&t.length>a.length.max&&r.push(`Too long. Maximum ${a.length.max} characters`);break;default:break}}),r}handleValidationsList(t,e,r,a){t.hasAttribute("data-validate-presence")&&o(t,e,r,a)}validateInput({params:{validations:t},target:e,target:{value:r}}){let a=d(e),[i]=this.errorsTargets.filter(c=>c.getAttribute("data-field")==a);this.handleValidationsList(e,a,r,i)}};l(s,"targets",["textField","errors"]);
